{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyO6TNAc8ca4tYn7Pq5wRERM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"dpj5K3hn-PIE","executionInfo":{"status":"ok","timestamp":1668181166042,"user_tz":-60,"elapsed":6216,"user":{"displayName":"Toni Galbis","userId":"02393000946722968163"}}},"outputs":[],"source":["import tensorflow as tf\n","import numpy as np"]},{"cell_type":"code","source":["celsius = np.array([-40, -10, 0, 8, 15, 22, 38], dtype=int)\n","fahrenheit = np.array([-40, 14, 32, 46, 59, 72, 100], dtype=int)"],"metadata":{"id":"VLqfZpmA-hWH","executionInfo":{"status":"ok","timestamp":1668181168631,"user_tz":-60,"elapsed":278,"user":{"displayName":"Toni Galbis","userId":"02393000946722968163"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["#Definimos una capa de salida en Keras\n","capa = tf.keras.layers.Dense(units=1, input_shape=[1])\n","\n","#Ya tengo las capas, ahora defino un modelo secuencial para trabajar\n","modelo = tf.keras.Sequential([capa])"],"metadata":{"id":"ptY4nwKN-yMF","executionInfo":{"status":"ok","timestamp":1668181172719,"user_tz":-60,"elapsed":362,"user":{"displayName":"Toni Galbis","userId":"02393000946722968163"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["#Compilamos el modelo para poder entrenarlo \n","#El algoritmo Adam le permite a la red ajustar los pesos y los sesgos\n","#0.1 hace referencia a la tasa de aprendizaje. Cuánto ajusta los pesos y los sesgos. \n","modelo.compile(\n","    optimizer=tf.keras.optimizers.Adam(0.1),\n","    loss='mean_squared_error'\n",")"],"metadata":{"id":"lmjJzIbh-56N","executionInfo":{"status":"ok","timestamp":1668181174920,"user_tz":-60,"elapsed":240,"user":{"displayName":"Toni Galbis","userId":"02393000946722968163"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["print(\"Comenzando entrenamiento...\")\n","entrenamiento = modelo.fit(celsius, fahrenheit, epochs=1000, verbose=False)\n","print(\"Modelo entrenado!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KdO0fvwP-8FI","executionInfo":{"status":"ok","timestamp":1668181180957,"user_tz":-60,"elapsed":2818,"user":{"displayName":"Toni Galbis","userId":"02393000946722968163"}},"outputId":"b468b186-fec9-4087-eb21-0ecde944ec7f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Comenzando entrenamiento...\n","Modelo entrenado!\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.xlabel(\"# Epoca\")\n","plt.ylabel(\"Magnitud de pérdida\")\n","plt.plot(entrenamiento.history[\"loss\"])"],"metadata":{"id":"hgk5jQV0-_BS","colab":{"base_uri":"https://localhost:8080/","height":296},"executionInfo":{"status":"ok","timestamp":1668181207781,"user_tz":-60,"elapsed":352,"user":{"displayName":"Toni Galbis","userId":"02393000946722968163"}},"outputId":"b168ad45-3bed-44b8-d673-d905ffa11828"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f30c6155c50>]"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["print(\"Hagamos una predicción!\")\n","resultado = modelo.predict([100.0])\n","print(\"El resultado es \" + str(resultado) + \" fahrenheit!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7XKv0siO_Bdg","executionInfo":{"status":"ok","timestamp":1668181285511,"user_tz":-60,"elapsed":259,"user":{"displayName":"Toni Galbis","userId":"02393000946722968163"}},"outputId":"5a283be3-d447-48e4-a0d0-e7b43b4495d8"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Hagamos una predicción!\n","1/1 [==============================] - 0s 86ms/step\n","El resultado es [[211.7419]] fahrenheit!\n"]}]}]}